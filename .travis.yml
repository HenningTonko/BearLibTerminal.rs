language: rust
rust:
  - stable
  - beta
  - nightly

cache:
  apt: true

env:
  global:
    - PATH="$HOME/bin:$PATH"
    - CMAKE_VERSION_PREFIX=3.7
    - CMAKE_VERSION_FULL=3.7.2

addons:
  apt:
    packages:
      - libxmu-dev
    sources:
      - r-packages-precise

deploy:
  provider: releases
  api_key:
    secure: "PVdwNPxvf19XkkA9cZDQmkasr9O/Nxpbzt492EIstE3xFvCcnR6Zzadew209gWxhVAVphE327RpfD/Ky5fAqSqMpvlGVVD+k6kFCwOHwSZ+e3FR1EJt+ikdATgCXW+NqtQQw4XDO/fEl3veDts+0horaDLSNS/kkN7PKLoUVj95UxdgnYwUZIK5KeamABCFi4NNPjFbiA9Nzxv8JFI7Mv5KkFnsw9fqmMnd98bI0wRWIVfUdZPABFi+Qp9B5jUWPb8YB/VYQ/q6rhaQHd/CkkLOMSSvyBRkkkEtMCzPqblzTm2ZlW2cNFu5G74fc7RdsM2bs2LvplbfHNFGnto1EGyZQslC4ZtdTu5mN06PMNbPBh35EfwU0y/7bYP9O2edehQPt7UUiG7NagiC6uxNPsHLZHedTkXGqMDfd26n2q4ZeZ31Yx7s/D32rZasClbxnYx071+LaZ4eIZLVtjn9ut1BHug4hfz0oo4bk0FWqlPtJ7VPsZSuaMP9GKOp1QWbZ55kA977MsKA42+AxrMBuT2cPLqohFOsrVn50VcD7X+U3MmJd6Qpj8JrvBQS9HnDl6p66F5czpnAKA2L9u33rwJCz5cHF7tDeymt3YHxNc1skweDLOTwqzhukqd1WWXKYcC1GNTP2qRxMidzMMIueGv0skYX/q+HGTODKv1Fbuks="
  file: "$HOME/lib/libBearLibTerminal.so"
  skip_cleanup: true
  on:
    tags: true

before_install:
  - if [ "$TRAVIS_SECURE_ENV_VARS" == "true" ]; then
      openssl aes-256-cbc -K $encrypted_2620d498bbb7_key -iv $encrypted_2620d498bbb7_iv -in gh_rsa.enc -out gh_rsa -d;
    fi

install:
  - mkdir -p /tmp/tools
  - pushd /tmp/tools
  - if [[ ! -f "cmake-$CMAKE_VERSION_FULL-Linux-x86_64.sh" ]]; then
      curl -SOL "https://cmake.org/files/v$CMAKE_VERSION_PREFIX/cmake-$CMAKE_VERSION_FULL-Linux-x86_64.sh";
      chmod +x "cmake-$CMAKE_VERSION_FULL-Linux-x86_64.sh";
    fi
  - ./"cmake-$CMAKE_VERSION_FULL-Linux-x86_64.sh" --prefix="$HOME" --exclude-subdir --skip-license
  - popd
  -
  - git clone https://github.com/nabijaczleweli/BearLibTerminal ~/BearLibTerminal && cd ~/BearLibTerminal/Build
  - cmake -G"Unix Makefiles" .. && make BearLibTerminal
  - mkdir ~/lib/ && cp ../Output/Linux64/libBearLibTerminal.so ~/lib/ && cd $TRAVIS_BUILD_DIR

script:
  - LD_PRELOAD=~/lib/libBearLibTerminal.so LD_LIBRARY_PATH="~/lib:$LD_LIBRARY_PATH" LIBRARY_PATH=~/lib cargo build --verbose
  - LD_PRELOAD=~/lib/libBearLibTerminal.so LD_LIBRARY_PATH="~/lib:$LD_LIBRARY_PATH" LIBRARY_PATH=~/lib cargo test --verbose

after_success:
  - if [ "$TRAVIS_SECURE_ENV_VARS" == "true" ] && [ -n "$TRAVIS_PULL_REQUEST" ] && [ "$TRAVIS_RUST_VERSION" == "stable" ]; then echo "Update docs for commits $TRAVIS_COMMIT_RANGE" > $TRAVIS_BUILD_DIR/../DOC_UPDATE_MSG; fi
  - if [ "$TRAVIS_SECURE_ENV_VARS" == "true" ] && [ -n "$TRAVIS_PULL_REQUEST" ] && [ "$TRAVIS_RUST_VERSION" == "stable" ]; then echo >> $TRAVIS_BUILD_DIR/../DOC_UPDATE_MSG; fi
  - if [ "$TRAVIS_SECURE_ENV_VARS" == "true" ] && [ -n "$TRAVIS_PULL_REQUEST" ] && [ "$TRAVIS_RUST_VERSION" == "stable" ]; then git log $TRAVIS_COMMIT_RANGE --pretty=oneline >> $TRAVIS_BUILD_DIR/../DOC_UPDATE_MSG; fi
  - if [ "$TRAVIS_SECURE_ENV_VARS" == "true" ] && [ -n "$TRAVIS_PULL_REQUEST" ] && [ "$TRAVIS_RUST_VERSION" == "stable" ]; then mkdir -p ~/.ssh && cp gh_rsa ~/.ssh/id_rsa && chmod 700 ~/.ssh && chmod 600 ~/.ssh/id_rsa; fi
  - if [ "$TRAVIS_SECURE_ENV_VARS" == "true" ] && [ -n "$TRAVIS_PULL_REQUEST" ] && [ "$TRAVIS_RUST_VERSION" == "stable" ]; then git clone -b doc git@github.com:nabijaczleweli/BearLibTerminal.rs.git $TRAVIS_BUILD_DIR-doc; fi
  - if [ "$TRAVIS_SECURE_ENV_VARS" == "true" ] && [ -n "$TRAVIS_PULL_REQUEST" ] && [ "$TRAVIS_RUST_VERSION" == "stable" ]; then ln -s $TRAVIS_BUILD_DIR-doc target/doc; fi
  - if [ "$TRAVIS_SECURE_ENV_VARS" == "true" ] && [ -n "$TRAVIS_PULL_REQUEST" ] && [ "$TRAVIS_RUST_VERSION" == "stable" ]; then LIBRARY_PATH=~/lib cargo doc; fi
  - if [ "$TRAVIS_SECURE_ENV_VARS" == "true" ] && [ -n "$TRAVIS_PULL_REQUEST" ] && [ "$TRAVIS_RUST_VERSION" == "stable" ]; then cd $TRAVIS_BUILD_DIR-doc; fi
  - if [ "$TRAVIS_SECURE_ENV_VARS" == "true" ] && [ -n "$TRAVIS_PULL_REQUEST" ] && [ "$TRAVIS_RUST_VERSION" == "stable" ]; then git config --global user.email "nabijaczleweli@gmail.com" && git config --global user.name "Nabijaczleweli Autouploader Bot" && git config --global push.default simple; fi
  - if [ "$TRAVIS_SECURE_ENV_VARS" == "true" ] && [ -n "$TRAVIS_PULL_REQUEST" ] && [ "$TRAVIS_RUST_VERSION" == "stable" ]; then git add * && git commit -F $TRAVIS_BUILD_DIR/../DOC_UPDATE_MSG; fi
  - if [ "$TRAVIS_SECURE_ENV_VARS" == "true" ] && [ -n "$TRAVIS_PULL_REQUEST" ] && [ "$TRAVIS_RUST_VERSION" == "stable" ]; then git push && cd $TRAVIS_BUILD_DIR; fi
